/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hrl: hrl {
            compatible = "zmk,behavior-hold-tap";
            label = "HRL";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 36 38 37>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            #binding-cells = <2>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            require-prior-idle-ms = <150>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
&none  &kp Q              &kp W            &kp E                &kp R                &kp T        &kp Y    &kp U                 &kp I                 &kp O             &kp P                           &none
&none  &hrl LEFT_SHIFT A  &hrl LEFT_ALT S  &hrl LEFT_COMMAND D  &hrl LEFT_CONTROL F  &kp G        &kp H    &hmr RIGHT_CONTROL J  &hmr RIGHT_COMMAND K  &hmr RIGHT_ALT L  &hmr RG(RIGHT_SHIFT) SEMICOLON  &none
&none  &kp Z              &kp X            &kp C                &kp V                &kp B        &kp N    &kp M                 &kp COMMA             &kp DOT           &kp FSLH                        &none
                                           &kp ESC              &kp BACKSPACE        &kp SPACE    &kp RET  &mo 2                 &none
            >;

            label = "Default";
        };

        lower {
            bindings = <
&none  &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &none
&none  &trans        &trans        &trans        &trans        &bt BT_CLR      &trans    &trans    &trans  &trans     &trans  &none
                                   &trans        &trans        &trans          &trans    &trans    &trans
            >;

            label = "Lower";
        };

        raise {
            bindings = <
&none  &kp EXCL   &kp AT     &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &none
&none  &trans     &trans     &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &none
&none  &kp TILDE  &kp GRAVE  &kp TAB   &kp SQT   &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &none
                             &trans    &trans    &trans       &trans     &trans     &trans
            >;

            label = "Raise";
        };
    };
};
